swagger: "2.0"
info:
  description: "This is the backend of a tic tac toe game.The game can be single-player or 2 player.A second player can join anytime and make a single player gamse as 2 player"
  version: "1.0.0"
  title: "Tic Tac toe"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "tictactoe.swagger.io"
basePath: "/v2"
tags:
- name: "games"
  description: "Everything about tic tac toe for (games controller)"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "games apis"
  description: "Access to Tic Tac Toe backend for games"
- name: "games"
  description: "Operations about games"
  externalDocs:
    description: "Find out more about our game"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /games:
    post:
      tags:
      - "games"
      summary: "Add a new game to the mapping"
      description: "Add a new game"
      operationId: "addGame"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Game object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Games"
      responses:
        405:
          description: "Invalid input"
      security:
      - games_auth: []

  /player1/{gameId}:
      put:
      tags:
      - "player1"
      summary: "Updated player1 move"
      description: "This can only be done by player1"
      operationId: "updateGame"
      produces:
      - "application/json"
      parameters:
      - name: "gameId"
        in: "path"
        description: "box that player1 wants to mark"
        required: true
        type: "objectid"
      - in: "body"
        name: "move"
        description: "Updated player1 moves"
        required: true
        schema:
          $ref: "#/definitions/Move"
      responses:
        400:
          description: "Invalid game supplied"
        404:
          description: "Game not found"

  /player2/{gameId}:
    put:
      tags:
      - "player2"
      summary: "Updated player2 move"
      description: "This can be done by the player or by the computer.Depends on the game format"
      operationId: "updateGame"
      produces:
      - "application/json"
      parameters:
      - name: "gameId"
        in: "path"
        description: "box that player2/computer wants to mark"
        required: true
        type: "objectId"
      - in: "body"
        name: "move"
        description: "Updated player2 moves"
        required: true
        schema:
          $ref: "#/definitions/Move"
      responses:
        400:
          description: "Invalid game supplied"
        404:
          description: "Game not found"
  
   /{gameId}:
    get:
      tags:
      - "game figures"
      summary: "Find game by ID"
      description: "Returns a single game"
      operationId: "getGameById"
      produces:
      - "application/json"
      parameters:
      - name: "gameId"
        in: "path"
        description: "ID of game to return"
        required: true
        type: "objectId"
        format: "24 character objectId"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Game"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Game not found"
      security:
      - api_key: []

  /join/{gameId}:
    put:
      tags:
      - "join as player2"
      summary: "join game as player2"
      description: "replace the cpu as the second player in the game"
      operationId: "updateGame"
      produces:
      - "application/json"
      parameters:
      - name: "gameId"
        in: "path"
        description: "box that player2/computer wants to mark"
        required: true
        type: "objectId"
      - in: "body"
        name: "player_id"
        description: "player2 id"
        required: true
        schema:
          $ref: "#/definitions/addPlayerToGame"
      responses:
        400:
          description: "Invalid game supplied"
        404:
          description: "Game not found"